# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET         /miami/                                 @controllers.HomeController.home
GET         /miami/admin                            @controllers.HomeController.index
GET         /miami/login                            @controllers.Auth.loginPage

# routes about GOOD
POST        /miami/admin/good/add                   @controllers.Goods.addGood()
POST        /miami/admin/good/edit                  @controllers.Goods.editGood(id: Long)
GET         /miami/admin/good/delete                @controllers.Goods.deleteGood(id: Long)
GET         /miami/admin/good/up                    @controllers.Goods.upGood(id: Long)
GET         /miami/admin/good/off                   @controllers.Goods.offGood(id: Long)
GET         /miami/admin/good/list                  @controllers.Goods.listGoods
GET         /miami/admin/stock/add                  @controllers.Goods.addStock(id: Long, num: Int)

#roures about Good for customer
GET         /miami/customer/good/list               @controllers.GoodsCustomer.listGood(storeId:Long,sort:Int)
GET         /miami/customer/good/search             @controllers.GoodsCustomer.searchGood(searchKey:String)
GET         /miami/customer/good/listWithCate       @controllers.GoodsCustomer.listGoodWithCate(storeId:Long,sort:Int)

# routes about CateGORY
POST        /miami/admin/category/add               @controllers.Categories.addCategory()
POST        /miami/admin/category/edit              @controllers.Categories.editCategory(id: Long)
GET         /miami/admin/category/delete            @controllers.Categories.deleteCategory(id: Long, isForce: Boolean = false)
GET         /miami/admin/category/list              @controllers.Categories.listCategories

# routes about Store for systemadmin
POST        /miami/admin/store/add                  @controllers.AdminController.createStore()
GET         /miami/admin/store/delete               @controllers.AdminController.deleteStore(id: Long)
GET         /miami/admin/store/list                 @controllers.AdminController.listStores
GET         /miami/admin/store/enable               @controllers.AdminController.enableStore(id: Long)
GET         /miami/admin/store/disable              @controllers.AdminController.disableStore(id: Long)
GET         /miami/admin/store/editCategory         @controllers.AdminController.editCategory(storeId: Long, cateId: Long)
GET         /miami/admin/store/listNames            @controllers.AdminController.listStoreNames

# routes about Store for storeadmin
POST        /miami/admin/store/edit                 @controllers.AdminController.editStore()
GET         /miami/admin/store/info                 @controllers.AdminController.information
GET         /miami/admin/store/open                 @controllers.AdminController.openStore()
GET         /miami/admin/store/close                @controllers.AdminController.closeStore()

# routes about store for customer
GET         /miami/customer/store/listCat           @controllers.GoodsCustomer.listStoreCat()
GET         /miami/customer/store/getByCat          @controllers.StoreCustomer.getStoreByCat(catId:Long,sort:Int,page:Option[Int])
GET         /miami/customer/store/getInfo           @controllers.StoreCustomer.getStoreInfo(storeId:Long)
GET         /miami/customer/store/search            @controllers.StoreCustomer.searchStore(searchKey:String)
GET         /miami/customer/store/listForHome       @controllers.StoreCustomer.storeListForHome(sort:Int,num:Option[Int])

# routes about order for customer
POST        /miami/customer/order/create            @controllers.OrderCustomer.createOrder
GET         /miami/customer/order/getByCustomer     @controllers.OrderCustomer.getOrderByCustomer(page:Option[Int])
GET         /miami/customer/order/getDetail         @controllers.OrderCustomer.getOrderDetail(orderId:Long)
GET         /miami/customer/order/confirmReceipt    @controllers.OrderCustomer.confirmReceipt(orderId:Long,storeId:Long)
GET         /miami/customer/order/getAddress        @controllers.OrderCustomer.getCustomerAddress(storeId:Long)
POST        /miami/customer/order/setAddress        @controllers.OrderCustomer.setCustomerAddress
POST        /miami/customer/order/modifyAddress     @controllers.OrderCustomer.modifyCustomerAddress
GET         /miami/customer/order/deleteAddress     @controllers.OrderCustomer.deleteCustomerAddress(addressId:Long)
GET         /miami/customer/order/cancel            @controllers.OrderCustomer.cancelOrder(orderId:Long)

GET         /miami/customer/order/socket            @controllers.OrderCustomer.socket(storeId:Long)
GET         /miami/customer/order/send              @controllers.OrderCustomer.send(storeId:Long,orderId:Long)

# routes about comment for customer
POST        /miami/customer/comment/create          @controllers.Comments.createComment
GET         /miami/customer/comment/getNum          @controllers.Comments.getCommentNum(storeId:Long)
GET         /miami/customer/comment/getByStore      @controllers.Comments.getCommentsByStore(storeId:Long,leval:Int,page:Option[Int],commentNum:Option[Int])
POST        /miami/customer/comment/uploadPic       @controllers.Comments.uploadPic()
GET         /miami/customer/comment/delete          @controllers.Comments.deleteComment(commentId:Long)
# routes about refund for customer
POST        /miami/customer/refund/create           @controllers.RefundCustomer.createRefund

# routes about miami api service
GET         /miami/api/openMiami                    @controllers.MiamiAPI.openMiami(appid:String,sn:String,timestamp:Long,nonce:String,signature:String,storeId:Long)
GET         /miami/api/disableMiami                 @controllers.MiamiAPI.disableMiami(appid:String,sn:String,timestamp:Long,nonce:String,signature:String,storeId:Long)
POST        /miami/api/openMiami4Bazaar             @controllers.MiamiAPI.openMiami4Bazaar(appid:String,sn:String,timestamp:Long,nonce:String,signature:String)
GET         /miami/api/disableMiami4Bazaar          @controllers.MiamiAPI.disableMiami4Bazaar(appid:String,sn:String,timestamp:Long,nonce:String,signature:String,storeId:Long)
GET         /miami/api/pay/callback                 @controllers.Pays.payResultSync(appId,signType,mammonTradeNo,tradeNo: Long,state: Int,totalFee: Int,sign)
GET         /miami/api/pay/response                 @controllers.Pays.payResultAsync(appId,signType,mammonTradeNo,tradeNo: Long,state: Int,totalFee: Int,sign)


# routes about ORDER
GET         /miami/admin/order/list                @controllers.Orders.listOrders(state: Option[Int], pageNum: Int)
GET         /miami/admin/order/spans               @controllers.Orders.listSpans
GET         /miami/admin/order/accept              @controllers.Orders.acceptOrder(id: Long)
GET         /miami/admin/order/deliver             @controllers.Orders.deliverOrder(id: Long)
GET         /miami/admin/order/refuse              @controllers.Orders.refuseOrder(id: Long)
GET         /miami/admin/refund/accept             @controllers.Orders.acceptRefund(orderId: Long, refundId: Long)
GET         /miami/admin/refund/refuse             @controllers.Orders.refuseRefund(orderId: Long, refundId: Long, msg: String)

#ROUTES about COMMENT
GET         /miami/admin/comment/list              @controllers.Comments.listComments(storeId: Option[Long], bottom: Option[Int], top: Option[Int], pageNum: Option[Int], pageSize: Option[Int])
GET         /miami/admin/comment/delete            @controllers.Comments.deleteBadComment(id: Long)
GET         /miami/admin/comment/reply             @controllers.Comments.replyComment(id: Long, orderId: String, content: String)
#routes about image
POST        /miami/admin/image/upload               @controllers.Materials.uploadImage()

# Map static resources from the /public folder to the /assets URL path
GET         /miami/assets/*file                     controllers.Assets.versioned(path="/public", file: Asset)
